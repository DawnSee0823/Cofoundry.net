angular.module("cms.pages",["ngRoute","cms.shared"]).constant("_",window._).constant("pages.modulePath","/Admin/Modules/Pages/Js/");
angular.module("cms.pages").config(["$routeProvider","shared.routingUtilities","pages.modulePath",function(e,i,a){a=i.mapOptions.bind(null,a);e.when("/new",a("AddPage")).when("/:id",a("PageDetails")).otherwise(a("PageList"))}]);
angular.module("cms.pages").factory("pages.customEntityService",["$http","shared.serviceBase",function(t,e){var r={getAllRoutingRules:function(){return t.get(e+"custom-entity-routing-rules/")}};return r}]);
angular.module("cms.pages").factory("pages.directoryService",["$http","_","shared.serviceBase",function(e,r,t){var a={},c=t+"page-directories";return a.getAll=function(){return e.get(c)},a}]);
angular.module("cms.pages").factory("pages.pageTemplateService",["$http","$q","shared.serviceBase",function(e,r,t){var a={},n=t+"page-templates";return a.getAll=function(){var t=r.defer();return e.get(n).then(function(e){t.resolve(e.items)},t.reject),t.promise},a}]);
angular.module("cms.pages").controller("AddPageAccessRuleController",["$scope","$q","shared.LoadState","shared.roleService","shared.userAreaService","shared.modalDialogService","options","close",function(e,o,n,a,r,t,d,l){var s=e;function u(){s.command.roleId=null}function c(e){if(s.command.userAreaCode)return e.userAreaCode=s.command.userAreaCode,e.excludeAnonymous=!0,a.search(e);e=o.defer();return e.resolve(),e.promise}function i(){s.onSave(s.command),l()}function f(){l()}angular.extend(e,d),s.globalLoadState=new n,s.saveLoadState=new n,s.formLoadState=new n,function(e){s.globalLoadState.on(),e&&_.isFunction(e.on)&&e.on()}(s.formLoadState),s.onAdd=i,s.onCancel=f,s.onUserAreaChanged=u,s.searchRoles=c,s.command={},u(),r.getAll().then(function(e){s.userAreas=_.filter(e,function(e){return"COF"!==e.userAreaCode}),1==s.userAreas.length&&(s.command.userAreaCode=s.userArea.userAreaCode)}).finally(function(e){s.globalLoadState.off(),e&&_.isFunction(e.off)&&e.off()}.bind(null,s.formLoadState))}]);
angular.module("cms.pages").controller("ChangePageUrlController",["$scope","$q","$location","shared.LoadState","shared.pageService","pages.customEntityService","options","close",function(o,t,e,a,n,r,l,i){var u=t.defer(),s=t.defer();function c(){o.submitLoadState.on(),n.updateUrl(o.command).then(l.onSave).then(i).finally(o.submitLoadState.off)}(function(){var e=l.page,t=e.pageRoute;o.isCustomEntityRoute="CustomEntityDetails"===t.pageType,o.page=e,o.command={pageId:e.pageId,localeId:t.locale?t.locale.localeId:void 0,pageDirectoryId:t.pageDirectory.pageDirectoryId},o.isCustomEntityRoute?o.command.customEntityRoutingRule=t.urlPath:o.command.urlPath=t.urlPath})(),o.submitLoadState=new a,o.formLoadState=new a(!0),o.save=c,o.close=i,o.localesLoaded=u.resolve,o.pageDirectoriesLoaded=s.resolve,o.formLoadState.offWhen(u,s,function(){if(o.isCustomEntityRoute)return r.getAllRoutingRules().then(function(e){o.routingRules=e});var e=t.defer();return e.resolve(),e}())}]);
angular.module("cms.pages").controller("DuplicatePageController",["$scope","$q","$location","shared.stringUtilities","shared.LoadState","shared.pageService","pages.customEntityService","options","close",function(o,t,a,e,i,n,l,r,s){var u=t.defer(),c=t.defer();function d(){o.isCustomEntityRoute||(o.command.urlPath=e.slugify(o.command.title))}function m(){o.submitLoadState.on(),n.duplicate(o.command).then(g).then(s).finally(o.submitLoadState.off)}function g(e){a.path("/"+e)}(function(){var e=r.page,t=e.pageRoute;o.isCustomEntityRoute="CustomEntityDetails"===t.pageType,o.page=e,o.command={pageToDuplicateId:e.pageId,localeId:t.locale?t.locale.localeId:void 0,pageDirectoryId:t.pageDirectory.pageDirectoryId,title:"Copy of "+e.latestVersion.title},o.isCustomEntityRoute?o.command.customEntityRoutingRule=t.urlPath:d()})(),o.submitLoadState=new i,o.formLoadState=new i(!0),o.save=m,o.close=s,o.onTitleChanged=d,o.localesLoaded=u.resolve,o.pageDirectoriesLoaded=c.resolve,o.formLoadState.offWhen(u,c,function(){if(o.isCustomEntityRoute)return l.getAllRoutingRules().then(function(e){o.routingRules=e});var e=t.defer();return e.resolve(),e}())}]);
angular.module("cms.pages").controller("PageAccessRuleListController",["$scope","$q","shared.LoadState","shared.pageService","shared.userAreaService","shared.roleService","shared.modalDialogService","shared.arrayUtilities","pages.modulePath","options","close",function(e,n,o,r,a,s,c,u,t,d,l){var i=e;function f(){i.command.accessRules=_.map(i.accessInfo.accessRules,function(e){return{pageAccessRuleId:e.pageAccessRuleId,userAreaCode:e.userArea.userAreaCode,roleId:e.role?e.role.roleId:null}}),i.command.redirectoToLogin||(i.command.userAreaCodeForLoginRedirect=null),h(i.saveLoadState),r.updateAccessRules(i.command).then(function(e,o){return R(o).then(i.mainForm.formStatus.success.bind(null,e))}.bind(null,"Access rules updated successfully")).then(l).finally(p.bind(null,i.saveLoadState))}function A(){c.show({templateUrl:t+"Routes/Modals/AddPageAccessRule.html",controller:"AddPageAccessRuleController",options:{onSave:g}})}function m(e,o){u.removeObject(i.accessInfo.accessRules,e),I()}function g(r){var o={};_.find(i.accessInfo.accessRules,function(e){var o=e.role?e.role.roleId:null;return e.userArea.userAreaCode===r.userAreaCode&&o==r.roleId})||(h(),n.all([r.roleId?s.getById(r.roleId).then(function(e){o.role=e}):n(function(e){e()}),a.getByCode(r.userAreaCode).then(function(e){o.userArea=e})]).then(function(){i.accessInfo.accessRules.push(o),i.accessInfo.accessRules=_(i.accessInfo.accessRules).chain().sortBy(function(e){return e.role?e.role.roleId:-1}).sortBy(function(e){return e.userArea.userAreaCode}).value(),I()}).finally(p))}function R(e){var o=d.page;return i.page=o,i.violationActions=[{id:"Error",name:"Error (403: Forbidden)"},{id:"NotFound",name:"Not Found (404: Not Found)"}],r.getAccessRulesByPageId(i.page.pageId).then(function(e){var o;i.accessInfo=e,i.command=(o=e,(e=_.pick(o,"pageId","userAreaCodeForLoginRedirect","violationAction")).redirectoToLogin=!!o.userAreaCodeForLoginRedirect,e),I()}).then(p.bind(null,e))}function I(){i.userAreasInRules=_(i.accessInfo.accessRules).chain().map(function(e){return e.userArea}).uniq(function(e){return e.userAreaCode}).sortBy("userAreaCode").value(),i.userAreasInRules.length&&_.find(i.userAreasInRules,function(e){return e.userAreaCode===i.command.userAreaCodeForLoginRedirect})||(i.command.redirectoToLogin=!1,i.command.userAreaCodeForLoginRedirect=null),i.command.userAreaCodeForLoginRedirect||(i.command.userAreaCodeForLoginRedirect=i.userAreasInRules[0].userAreaCode)}function h(e){i.globalLoadState.on(),e&&_.isFunction(e.on)&&e.on()}function p(e){i.globalLoadState.off(),e&&_.isFunction(e.off)&&e.off()}i.save=f,i.close=l,i.add=A,i.deleteRule=m,i.globalLoadState=new o,i.saveLoadState=new o,i.formLoadState=new o(!0),i.canManage=!0,i.editMode=i.canManage,R(i.formLoadState)}]);
angular.module("cms.pages").controller("AddPageController",["_","$q","$location","$window","shared.LoadState","shared.stringUtilities","shared.urlLibrary","shared.pageService","pages.pageTemplateService","pages.customEntityService",function(t,e,a,n,o,l,i,d,s,r){var u=this,c=e.defer(),g=e.defer();function f(e,a){var n=e?(u.command.publish=!0,u.saveAndPublishLoadState):u.saveLoadState;e=n,u.globalLoadState.on(),e&&t.isFunction(e.on)&&e.on(),d.add(u.command).then(a).finally(function(e){u.globalLoadState.off(),e&&t.isFunction(e.off)&&e.off()}.bind(null,n))}function p(e){a.path("/"+e)}function h(e){return d.getById(e).then(function(e){n.location.href=i.visualEditorForPage(e.pageRoute,!0)})}function m(){u.command.urlPath=l.slugify(u.command.title)}function v(){var e=u.command.pageType,e="CustomEntityDetails"==e?e:"Generic";u.pageTemplates=t.where(u.allPageTemplates,{pageType:e})}function L(){a.path("/")}u.save=f.bind(null,!1,p),u.saveAndPublish=f.bind(null,!0,p),u.saveAndEdit=f.bind(null,!1,h),u.cancel=L,u.onNameChanged=m,u.onPageTypeChanged=v,u.globalLoadState=new o,u.saveLoadState=new o,u.saveAndPublishLoadState=new o,u.formLoadState=new o(!0),u.onLocalesLoaded=c.resolve,u.onPageDirectoriesLoaded=g.resolve,function(){u.pageTypes=d.getPageTypes(),u.command={showInSiteMap:!0,pageType:u.pageTypes[0].value};var e=s.getAll().then(function(e){u.allPageTemplates=e}),a=r.getAllRoutingRules().then(function(e){u.routingRules=e});u.formLoadState.offWhen(c,g,e,a).then(v)}()}]);
angular.module("cms.pages").controller("PageDetailsController",["$routeParams","$q","$location","_","shared.LoadState","shared.SearchQuery","shared.modalDialogService","shared.entityVersionModalDialogService","shared.urlLibrary","shared.pageService","shared.permissionValidationService","shared.userAreaService","pages.modulePath",function(a,t,e,n,o,i,s,r,l,u,d,c,p){var g=this;function h(){g.editMode=!0,g.mainForm.formStatus.clear()}function f(e){e=e?(g.updateDraftCommand.publish=!0,g.saveAndPublishLoadState):g.saveLoadState;k(e),u.update(g.updatePageCommand).then(u.updateDraft.bind(this,g.updateDraftCommand)).then(L.bind(null,"Changes were saved successfully")).finally(E.bind(null,e))}function m(){g.editMode=!1,g.updatePageCommand=M(g.page),g.updateDraftCommand=V(g.page),g.mainForm.formStatus.clear()}function b(){r.publish(g.page.pageId,k).then(L.bind(null,"Page published successfully.")).catch(E)}function P(){r.unpublish(g.page.pageId,k).then(L.bind(null,"The page has been unpublished and reverted to draft state.")).catch(E)}function v(){var e={title:"Discard Version",message:"Are you sure you want to discard this draft? This will discard all changes since the page was last published.",okButtonTitle:"Yes, discard it",onOk:function(){return k(),u.removeDraft(g.page.pageId)}};s.confirm(e).then(L.bind(null,"Draft discarded successfully"))}function S(e){r.copyToDraft(g.page.pageId,e.pageVersionId,g.page.pageRoute.hasDraftVersion,k).then(function(){L("Draft created successfully.")}).catch(E)}function D(){var e={title:"Delete Page",message:"Are you sure you want to delete this page?",okButtonTitle:"Yes, delete it",onOk:function(){return k(),u.remove(g.page.pageId).then(G).catch(E)}};s.confirm(e)}function w(){s.show({templateUrl:p+"Routes/Modals/DuplicatePage.html",controller:"DuplicatePageController",options:{page:g.page}})}function C(){s.show({templateUrl:p+"Routes/Modals/ChangePageUrl.html",controller:"ChangePageUrlController",options:{page:g.page,onSave:L.bind(null,"Url Changed")}})}function y(){s.show({templateUrl:p+"Routes/Modals/PageAccessRuleList.html",controller:"PageAccessRuleListController",options:{page:g.page}})}function L(e,a){return I(a).then(g.mainForm.formStatus.success.bind(null,e))}function I(e){return t.all([u.getById(a.id).then(function(e){return g.page=e,g.updatePageCommand=M(e),g.updateDraftCommand=V(e),g.editMode=!1,g.isMarkedPublished="Published"==g.page.pageRoute.publishStatus,g.publishStatusLabel=A(e.pageRoute),e}),R(),c.getAll().then(function(e){g.accessRulesEnabled=1<e.length})]).then(function(e){F(e[1])}).then(E.bind(null,e))}function U(){return g.versionsLoadState.on(),R().then(F).then(E.bind(null,g.versionsLoadState))}function R(){return u.getVersionsByPageId(a.id,g.versionsQuery.getParameters())}function F(e){var a=g.page,t=a.pageRoute.isPublished();n.each(e.items,function(e){e.versionLabel=function(e,a){if("Draft"==e.workFlowStatus)return e.workFlowStatus;var t="V"+e.displayVersion;return e.isLatestPublishedVersion?t+" ("+A(a)+")":t}(e,a.pageRoute),e.browseUrl=g.urlLibrary.visualEditorForVersion(a.pageRoute,e,!1,t)}),g.versions=e}function A(e){return"Published"==e.publishStatus&&e.publishDate<Date.now()?"Pending Publish":e.publishStatus}function M(e){return{pageId:e.pageId,tags:e.tags}}function V(e){var a=e.latestVersion,t=a.openGraph;return{pageId:e.pageId,title:a.title,metaDescription:a.metaDescription,openGraphTitle:t.title,openGraphDescription:t.description,openGraphImageId:t.image?t.image.ImageAssetId:void 0,showInSiteMap:a.showInSiteMap}}function G(){e.path("")}function k(e){g.globalLoadState.on(),e&&n.isFunction(e.on)&&e.on()}function E(e){g.globalLoadState.off(),e&&n.isFunction(e.off)&&e.off()}g.edit=h,g.save=f.bind(null,!1),g.saveAndPublish=f.bind(null,!0),g.cancel=m,g.publish=b,g.unpublish=P,g.discardDraft=v,g.copyToDraft=S,g.deletePage=D,g.duplicatePage=w,g.changeUrl=C,g.viewAccessRules=y,g.editMode=!1,g.globalLoadState=new o,g.saveLoadState=new o,g.saveAndPublishLoadState=new o,g.formLoadState=new o(!0),g.versionsLoadState=new o,g.urlLibrary=l,g.versionsQuery=new i({onChanged:U,useHistory:!1,defaultParams:{pageSize:6}}),g.canCreate=d.canCreate("COFPGE"),g.canUpdate=d.canUpdate("COFPGE"),g.canDelete=d.canDelete("COFPGE"),g.canPublishPage=d.hasPermission("COFPGEPAGPUB"),g.canUpdatePageUrl=d.hasPermission("COFPGEUPDURL"),I(g.formLoadState)}]);
angular.module("cms.pages").controller("PageListController",["_","shared.entityVersionModalDialogService","shared.LoadState","shared.SearchQuery","shared.pageService","shared.permissionValidationService","pages.pageTemplateService",function(a,t,e,n,i,l,r){var o=this;function s(e){o.isFilterVisible=a.isUndefined(e)?!o.isFilterVisible:e}function d(e){t.publish(e,o.globalLoadState.on).then(u).then(o.globalLoadState.off).catch(o.globalLoadState.off)}function g(){s(!1),u()}function u(){return o.gridLoadState.on(),i.getAll(o.query.getParameters()).then(function(e){o.result=e,o.gridLoadState.off()})}o.publishStatus=[{name:"Unpublished"},{name:"Published"}],r.getAll().then(function(e){o.pageTemplates=e}),o.gridLoadState=new e,o.globalLoadState=new e,o.query=new n({onChanged:g}),o.filter=o.query.getFilters(),o.toggleFilter=s,s(!1),o.publish=d,o.canCreate=l.canCreate("COFPGE"),o.canUpdate=l.canUpdate("COFPGE"),u()}]);