angular.module("cms.directories", ["ngRoute", "cms.shared"]).constant("_", window._).constant("directories.modulePath", "/admin/modules/directories/js/"); angular.module("cms.directories").config(["$routeProvider", "shared.routingUtilities", "directories.modulePath", function (n, t, i) { t.registerCrudRoutes(n, i, "Directory") }]); angular.module("cms.directories").controller("AddDirectoryController", ["$location", "shared.stringUtilities", "shared.LoadState", "directories.directoryService", function (n, t, i, r) { function e() { l(); u.formLoadState = new i(!0); u.globalLoadState = new i; u.editMode = !1; u.save = o; u.cancel = c; u.onNameChanged = h; u.onDirectoriesLoaded = s } function o() { u.globalLoadState.on(); r.add(u.command).then(f, u.globalLoadState.off) } function s() { u.formLoadState.off() } function h() { u.command.urlPath = t.slugify(u.command.name) } function c() { f() } function f() { n.path("/") } function l() { u.command = {} } var u = this; e() }]); angular.module("cms.directories").controller("DirectoryDetailsController", ["$routeParams", "$q", "$location", "_", "shared.stringUtilities", "shared.LoadState", "shared.modalDialogService", "directories.directoryService", "directories.modulePath", function (n, t, i, r, u, f, e, o) { function v() { s.edit = y; s.save = p; s.cancel = w; s.deleteDirectory = b; s.onNameChanged = k; s.editMode = !1; s.globalLoadState = new f; s.saveLoadState = new f; s.formLoadState = new f(!0); c().then(h.bind(null, s.formLoadState)) } function y() { s.editMode = !0; s.mainForm.formStatus.clear() } function p() { a(s.saveLoadState); o.update(s.command).then(d.bind(null, "Changes were saved successfully")).finally(h.bind(null, s.saveLoadState)) } function w() { s.editMode = !1; s.command = l(s.webDirectory); s.mainForm.formStatus.clear() } function b() { function t() { return a(), o.remove(s.webDirectory.webDirectoryId).then(g).catch(h) } var n = { title: "Delete Directory", message: "Are you sure you want to delete this directory?", okButtonTitle: "Yes, delete it", onOk: t }; e.confirm(n) } function k() { s.hasChildContent || (s.command.urlPath = u.slugify(s.command.name)) } function d(n) { return c().then(s.mainForm.formStatus.success.bind(null, n)) } function c() { function i(n) { var i = n.findNodeById(t), r = n.flatten(t); s.webDirectory = i; s.parentDirectories = r; s.command = l(i); s.editMode = !1; s.hasChildContent = i.numPages || i.childWebDirectories.length } var t = n.id; return o.getTree().then(i) } function l(n) { return r.pick(n, "webDirectoryId", "name", "urlPath", "parentWebDirectoryId") } function g() { i.path("") } function a(n) { s.globalLoadState.on(); n && r.isFunction(n.on) && n.on() } function h(n) { s.globalLoadState.off(); n && r.isFunction(n.off) && n.off() } var s = this; v() }]); angular.module("cms.directories").controller("DirectoryListController", ["_", "shared.modalDialogService", "shared.LoadState", "shared.SearchQuery", "directories.directoryService", function (n, t, i, r, u) { function e() { f.gridLoadState = new i; o() } function o() { return f.gridLoadState.on(), u.getTree().then(function (n) { var t = n.flatten(); f.result = t.slice(1, t.length); f.gridLoadState.off() }) } var f = this; e() }]); angular.module("cms.directories").factory("directories.directoryService", ["$http", "_", "shared.serviceBase", "directories.DirectoryTree", function (n, t, i, r) { function e(n) { return f + "/" + n } var u = {}, f = i + "webdirectories"; return u.getAll = function () { return n.get(f) }, u.getTree = function () { return n.get(f + "/tree").then(function (n) { return n ? new r(n) : n }) }, u.getById = function (t) { return n.get(e(t)) }, u.add = function (t) { return n.post(f, t) }, u.update = function (t) { return n.patch(e(t.webDirectoryId), t) }, u.remove = function (t) { return n.delete(e(t)) }, u }]); angular.module("cms.directories").factory("directories.DirectoryTree", ["_", function (n) { function t(t) { var i = this; n.extend(i, t); i.flatten = function (t) { function u(i, r) { i.webDirectoryId != t && (r.push(i), n.each(i.childWebDirectories, function (n) { u(n, r) })) } var r = []; return u(i, r), r }; i.findNodeById = function (n) { function t(i) { var r; if (i) return i.forEach(function (i) { r || (r = i.webDirectoryId == n ? i : t(i.childWebDirectories)) }), r } return t([i]) } } return t }]); angular.module("cms.directories").directive("cmsDirectoryGrid", ["directories.modulePath", function (n) { function t() { function t(t) { for (var i = "", u = (n.startDepth || 0) + 1, r = u; r < t; r++)i += "— "; return i } var n = this; n.getPathDepthIndicator = t } return { restrict: "E", templateUrl: n + "uicomponents/directories/DirectoryGrid.html", scope: { webDirectories: "=cmsDirectories", startDepth: "=cmsStartDepth", redirect: "=cmsRedirect" }, replace: !1, controller: t, controllerAs: "vm", bindToController: !0 } }])