angular.module("cms.images", ["ngRoute", "cms.shared"]).constant("_", window._).constant("images.modulePath", "/admin/modules/images/js/"); angular.module("cms.images").config(["$routeProvider", "shared.routingUtilities", "images.modulePath", function (n, t, i) { t.registerCrudRoutes(n, i, "Image") }]); angular.module("cms.images").controller("AddImageController", ["$location", "_", "shared.focusService", "shared.stringUtilities", "shared.LoadState", "images.imageService", function (n, t, i, r, u, f) { function s() { l(); e.save = h; e.cancel = a; e.onFileChanged = c; e.editMode = !1; e.saveLoadState = new u } function h() { e.saveLoadState.on(); f.add(e.command).progress(e.saveLoadState.setProgress).then(o) } function c() { var n = e.command; n.file && n.file.name && (n.title = r.capitaliseFirstLetter(r.getFileNameWithoutExtension(n.file.name)), i.focusById("title")) } function l() { e.command = {} } function a() { o() } function o() { n.path("") } var e = this; s() }]); angular.module("cms.images").controller("ImageDetailsController", ["$routeParams", "$q", "$location", "_", "shared.LoadState", "shared.modalDialogService", "images.imageService", "images.modulePath", function (n, t, i, r, u, f, e) { function a() { o.edit = v; o.save = y; o.cancel = p; o.remove = w; o.editMode = !1; o.globalLoadState = new u; o.saveLoadState = new u; o.formLoadState = new u(!0); s(o.formLoadState) } function v() { o.editMode = !0; o.mainForm.formStatus.clear() } function y() { c(o.saveLoadState); e.update(o.command).then(b.bind(null, "Changes were saved successfully", o.saveLoadState)) } function p() { o.editMode = !1; o.previewImage = r.clone(o.image); o.command = h(o.image); o.mainForm.formStatus.clear() } function w() { function t() { return c(), e.remove(o.image.imageAssetId).then(k).catch(l) } var n = { title: "Delete Image", message: "Are you sure you want to delete this image?", okButtonTitle: "Yes, delete it", onOk: t }; f.confirm(n) } function b(n, t) { return s(t).then(o.mainForm.formStatus.success.bind(null, n)) } function s(t) { function i() { return e.getById(n.id).then(function (n) { o.image = n; o.previewImage = n; o.command = h(n); o.editMode = !1 }) } return i().then(l.bind(null, t)) } function h(n) { return r.pick(n, "imageAssetId", "title", "tags", "defaultAnchorLocation") } function k() { i.path("") } function c(n) { o.globalLoadState.on(); n && r.isFunction(n.on) && n.on() } function l(n) { o.globalLoadState.off(); n && r.isFunction(n.off) && n.off() } var o = this; a() }]); angular.module("cms.images").controller("ImageListController", ["_", "shared.LoadState", "shared.SearchQuery", "images.imageService", function (n, t, i, r) { function o() { u.gridLoadState = new t; u.query = new i({ onChanged: s }); u.filter = u.query.getFilters(); u.toggleFilter = f; f(!1); e() } function f(t) { u.isFilterVisible = n.isUndefined(t) ? !u.isFilterVisible : t } function s() { f(!1); e() } function e() { return u.gridLoadState.on(), r.getAll(u.query.getParameters()).then(function (n) { u.result = n; u.gridLoadState.off() }) } var u = this; o() }]); angular.module("cms.images").factory("images.imageService", ["$http", "$upload", "shared.imageService", function (n, t, i) { var r = _.extend({}, i); return r.remove = function (t) { return n.delete(r.getIdRoute(t)) }, r }])