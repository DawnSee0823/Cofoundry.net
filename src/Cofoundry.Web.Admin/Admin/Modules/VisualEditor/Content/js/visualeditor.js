angular.module("cms.visualEditor", ["cms.shared"]).constant("_", window._).constant("visualEditor.modulePath", "/admin/modules/visualeditor/js/"); angular.module("cms.visualEditor").controller("VisualEditorController", ["$window", "$scope", "_", "shared.LoadState", "shared.entityVersionModalDialogService", "shared.modalDialogService", "shared.localStorage", "visualEditor.pageModuleService", "visualEditor.modulePath", "shared.urlLibrary", "visualEditor.options", function (n, t, i, r, u, f, e, o, s, h, c) { function g() { var t = n.addEventListener ? "addEventListener" : "attachEvent", i = window[t], r = t === "attachEvent" ? "onmessage" : "message"; i(r, nt); l.globalLoadState = a; l.config = tt; l.publish = it; l.unpublish = rt; l.copyToDraft = ut; l.addSectionModule = ft; l.addModule = p; l.addModuleAbove = p; l.addModuleBelow = p; l.editModule = et; l.moveModuleUp = d; l.moveModuleDown = d; l.deleteModule = ot } function nt(n) { l[n.data.action].apply(this, n.data.args) } function tt() { y = { entityNameSingular: c.entityNameSingular, isCustomEntity: c.isCustomEntityRoute } } function it(n) { u.publish(n.entityId, b, y).then(st).catch(k) } function rt(n) { u.unpublish(n.entityId, b, y).then(w).catch(k) } function ut(n) { u.copyToDraft(n.entityId, n.versionId, n.hasDraftVersion, b, y).then(w).catch(k) } function ft(n) { function t() { a.off() } f.show({ templateUrl: s + "routes/modals/addmodule.html", controller: "AddModuleController", options: { insertMode: n.insertMode, pageTemplateSectionId: n.pageTemplateSectionId, adjacentVersionModuleId: n.versionModuleId, permittedModuleTypes: n.permittedModuleTypes, onClose: t, refreshContent: v, isCustomEntity: n.isCustomEntity } }) } function p(n) { function t() { a.off() } a.isLoading || (a.on(), f.show({ templateUrl: s + "routes/modals/addmodule.html", controller: "AddModuleController", options: { pageTemplateSectionId: n.pageTemplateSectionId, adjacentVersionModuleId: n.versionModuleId, permittedModuleTypes: n.permittedModuleTypes, insertMode: n.insertMode, refreshContent: v, isCustomEntity: n.isCustomEntity, onClose: t } })) } function et(n) { function t() { a.off() } a.isLoading || (a.on(), f.show({ templateUrl: s + "routes/modals/editmodule.html", controller: "EditModuleController", options: { versionModuleId: n.versionModuleId, pageModuleTypeId: n.pageModuleTypeId, isCustomEntity: n.isCustomEntity, refreshContent: v, onClose: t } })) } function d(n) { var t = n.isUp ? o.moveUp : o.moveDown; a.isLoading || (a.on(), t(n.isCustomEntity, n.versionModuleId).then(v).finally(a.off)) } function ot(n) { function r() { return o.remove(t, n.versionModuleId).then(v).finally(a.off) } function u() { a.off() } var t = n.isCustomEntity, i = { title: "Delete Module", message: "Are you sure you want to delete this module?", okButtonTitle: "Yes, delete it", onOk: r, onCancel: u }; a.isLoading || (a.on(), f.confirm(i)) } function v() { w() } function st() { var t = n.parent.location.href; t.indexOf("mode=edit") > -1 && (t = t.replace("mode=edit", "mode=preview")); n.parent.location = t } function w() { n.parent.location = n.parent.location } function b() { l.globalLoadState.on() } function k() { l.globalLoadState.off() } var l = this, ht = n.document, y, a = new r; g() }]); angular.module("cms.visualEditor").controller("AddModuleController", ["$scope", "$q", "_", "shared.LoadState", "visualEditor.pageModuleService", "visualEditor.options", "options", "close", function (n, t, i, r, u, f, e, o) { function l() { var t = e.anchorElement; n.command = { dataModel: {}, pageTemplateSectionId: e.pageTemplateSectionId, pageVersionId: f.pageVerisonId, adjacentVersionModuleId: e.adjacentVersionModuleId, insertMode: e.insertMode || "Last" }; n.submitLoadState = new r; n.formLoadState = new r(!0); n.save = v; n.close = h; n.selectModuleType = c; n.selectModuleTypeAndNext = p; n.isModuleTypeSelected = w; n.setStep = s; a() } function a() { function t(t) { n.title = e.sectionName; n.moduleTypes = e.permittedModuleTypes.length ? i.filter(t, function (n) { return i.contains(e.permittedModuleTypes, n.fileName) }) : t; n.moduleTypes.length === 1 ? (n.command.pageModuleTypeId = n.moduleTypes[0].pageModuleTypeId, s(2)) : n.allowStep1 = !0; n.formLoadState.off() } s(1); u.getAllModuleTypes().then(t) } function v() { n.submitLoadState.on(); u.add(e.isCustomEntity, n.command).then(e.refreshContent).then(h).finally(n.submitLoadState.off) } function h() { o(); e.onClose() } function s(t) { n.currentStep = t; t === 2 && y() } function y() { function t(t) { n.formDataSource = { modelMetaData: t, model: n.command.dataModel }; n.templates = t.templates; n.formLoadState.off() } n.formLoadState.on(); u.getModuleTypeSchema(n.command.pageModuleTypeId).then(t) } function c(t) { n.command.pageModuleTypeId = t && t.pageModuleTypeId } function p(n) { c(n); s(2) } function w(t) { return t && t.pageModuleTypeId === n.command.pageModuleTypeId } l() }]); angular.module("cms.visualEditor").controller("EditModuleController", ["$scope", "$q", "_", "shared.LoadState", "visualEditor.pageModuleService", "visualEditor.options", "options", "close", function (n, t, i, r, u, f, e, o) { function h() { var t = e.anchorElement; n.command = { dataModel: {} }; n.submitLoadState = new r; n.formLoadState = new r(!0); n.save = l; n.close = s; c() } function c() { function s(t) { n.templates = t.templates; i.modelMetaData = t } function h(t) { n.command = t; i.model = t.dataModel } function c() { n.formDataSource = i; n.formLoadState.off() } var i = {}, r, f, o; n.formLoadState.on(); r = u.getModuleTypeSchema(e.pageModuleTypeId).then(s); f = u.getPageVersionModuleById(e.isCustomEntity, e.versionModuleId).then(h); o = t.all([r, f]).then(c) } function l() { n.submitLoadState.on(); u.update(e.isCustomEntity, e.versionModuleId, n.command).then(e.refreshContent).then(s).finally(n.submitLoadState.off) } function s() { o(); e.onClose() } h() }]); angular.module("cms.visualEditor").directive("cmsPageSection", ["$window", "$timeout", "_", "shared.modalDialogService", "visualEditor.modulePath", function (n, t, i, r, u) { function f(n) { this.getSectionParams = function () { return i.pick(n, ["siteFrameEl", "refreshContent", "pageTemplateSectionId", "isMultiModule", "isCustomEntity", "permittedModuleTypes"]) } } function e(i) { function s() { i.isOver = !1; i.setIsOver = o; i.addModule = h; i.startScrollY = 0; i.currentScrollY = 0; i.$watch("sectionAnchorElement", c); i.$watch("isSectionOver", o); i.$watch("scrolled", a); i.$watch("resized", l) } function h() { function n() { i.isPopupActive = !1 } i.isPopupActive = !0; r.show({ templateUrl: u + "routes/modals/addmodule.html", controller: "AddModuleController", options: { anchorElement: i.sectionAnchorElement, pageTemplateSectionId: i.pageTemplateSectionId, onClose: n, refreshContent: v, isCustomEntity: i.isCustomEntity, permittedModuleTypes: i.permittedModuleTypes } }) } function o(n) { n ? (f && (t.cancel(f), f = null), i.isOver = !0, e(i.sectionAnchorElement, !0)) : f || (f = t(function () { i.isOver = !1; e(i.sectionAnchorElement, !1) }, 300)) } function c(t, r) { function u(n) { return n ? n.split(",") : [] } function f() { var u = i.siteFrameEl, e = t.offset(), f = u.offset(), s = u[0].contentDocument.documentElement, r = e.top + f.top - s.scrollTop + 2, o; r < f.top && (r = f.top); o = (n.innerWidth - u[0].clientWidth) / 2 + (e.left + t[0].offsetWidth); i.css = { top: r + "px", left: (o || 0) + "px" }; i.startScrollY = i.currentScrollY; i.startY = r } t && (i.pageTemplateSectionId = t.attr("data-cms-page-template-section-id"), i.sectionName = t.attr("data-cms-page-section-name"), i.isMultiModule = t.attr("data-cms-multi-module"), i.permittedModuleTypes = u(t.attr("data-cms-page-section-permitted-module-types")), i.isCustomEntity = t[0].hasAttribute("data-cms-custom-entity-section"), f()); e(r, !1) } function l() { i.isOver = !1; i.sectionAnchorElement = "" } function a(n) { i.currentScrollY = n || 0; var t = i.startY + (i.startScrollY - n); t < 0 && (t = 0); t && (i.css = { top: t + "px", left: i.css.left }) } function v() { return i.refreshContent({ pageTemplateSectionId: i.pageTemplateSectionId }) } function e(n, t) { n && n.toggleClass("cofoundry-sv__hover-section", t) } var f; s() } return { restrict: "E", templateUrl: u + "uicomponents/PageSection.html", controller: ["$scope", f], link: e, replace: !0 } }]); angular.module("cms.visualEditor").directive("cmsPageSectionModule", ["$window", "$timeout", "visualEditor.pageModuleService", "shared.modalDialogService", "shared.LoadState", "visualEditor.modulePath", "visualEditor.options", function (n, t, i, r, u, f) { function e(e, o, s, h) { function d() { e.isOver = !1; k(); e.setIsOver = b; e.addModule = y.bind(null, "Last"); e.editModule = nt; e.moveModuleUp = w.bind(null, !0); e.moveModuleDown = w.bind(null, !1); e.addModuleAbove = y.bind(null, "BeforeItem"); e.addModuleBelow = y.bind(null, "AfterItem"); e.deleteModule = g; e.globalLoadState = c; e.$watch("anchorElement", tt); e.$watch("isContainerOver", b); e.$watch("scrolled", it) } function w(n) { var t = n ? i.moveUp : i.moveDown; c.isLoading || (c.on(), t(l.isCustomEntity, e.versionModuleId).then(v).finally(c.off)) } function g() { function u() { return i.remove(n, e.versionModuleId).then(v).finally(c.off) } var f = e.anchorElement, n = l.isCustomEntity, t = { title: "Delete Module", message: "Are you sure you want to delete this module?", okButtonTitle: "Yes, delete it", onOk: u }; c.isLoading || (c.on(), r.confirm(t)) } function y(n) { function t() { e.isPopupActive = !1; c.off() } c.isLoading || (c.on(), e.isPopupActive = !0, r.show({ templateUrl: f + "routes/modals/addmodule.html", controller: "AddModuleController", options: { anchorElement: e.anchorElement, pageTemplateSectionId: e.pageTemplateSectionId, adjacentVersionModuleId: e.versionModuleId, insertMode: n, refreshContent: v, isCustomEntity: l.isCustomEntity, permittedModuleTypes: l.permittedModuleTypes, onClose: t } })) } function nt() { function n() { e.isPopupActive = !1; c.off() } c.isLoading || (c.on(), e.isPopupActive = !0, r.show({ templateUrl: f + "routes/modals/editmodule.html", controller: "EditModuleController", options: { anchorElement: e.anchorElement, versionModuleId: e.versionModuleId, pageModuleTypeId: e.pageModuleTypeId, isCustomEntity: l.isCustomEntity, refreshContent: v, onClose: n } })) } function b(n) { k(); n ? (a && (t.cancel(a), a = null), e.isOver = !0, p(e.anchorElement, !0)) : a || (a = t(function () { e.isOver = !1; p(e.anchorElement, !1) }, 300)) } function tt(i, r) { function u(i, r) { var u = l.siteFrameEl, o = i.offset(), e = u.offset(), s = u[0].contentDocument.documentElement, f = o.top + e.top - s.scrollTop + 2, h; f < e.top && (f = e.top); h = o.left - s.scrollLeft + (n.innerWidth - u[0].clientWidth) / 2 + 2; r.css = { top: f + "px", left: (h || 0) + "px" }; r.startScroll = u[0].contentWindow.scrollY; r.startY = f; t(function () { var n = document.getElementById("cofoundry-sv__module-popover"), t; n && (t = n.offsetHeight, windowHeight = window.innerHeight, n.offsetTop + t > windowHeight && (r.css.top = windowHeight - t + "px")) }, 1) } i && (e.versionModuleId = i.attr("data-cms-version-module-id"), e.pageModuleTypeId = i.attr("data-cms-page-module-type-id"), u(i, e)); p(r, !1) } function it(n) { var t = e.startY - n + e.startScroll; t && (e.css = { top: t + "px", left: e.css.left }) } function v() { return e.refreshContent({ pageTemplateSectionId: e.pageTemplateSectionId }) } function p(n, t) { n && n.toggleClass("cofoundry-sv__hover-module", t) } function k() { l = h[0].getSectionParams(); e.isMultiModule = l.isMultiModule; e.pageTemplateSectionId = l.pageTemplateSectionId } var a, l, c = new u; d() } return { scope: { anchorElement: "=", isContainerOver: "=", refreshContent: "=", scrolled: "=" }, templateUrl: f + "uicomponents/PageSectionModule.html", require: ["^cmsPageSection"], link: e } }]); angular.module("cms.visualEditor").directive("cmsSitePageFrame", ["$window", "$templateCache", "$compile", "$document", "$q", "$http", "visualEditor.options", function (n, t, i, r, u, f, e) { function h(n, t) { function i() { n.$apply(function () { var i = t[0].contentWindow, r = t[0].contentDocument; c(n, r, t); i.addEventListener("scroll", function () { n.scrolled = angular.element(this)[0].scrollY; n.$apply() }); i.addEventListener("resize", function () { n.resized = angular.element(this)[0].innerWidth }); o && o.resolve() }) } t.ready(i) } function c(n, t, i) { var r = new l(n, i); s(t, r); angular.element(t).find("html").addClass(e.isCustomEntityRoute ? "cofoundry-editmode__custom-entity" : "cofoundry-editmode__page") } function s(n, t) { function i(t, i, u) { var o = "data-cms-" + r + "-" + t, e, s, f; for (e = n.hasAttribute && n.hasAttribute(o) ? [n] : n.querySelectorAll("[" + o + "]"), s = e.length, f = 0; f < s; ++f)e[f].addEventListener("mouseenter", i.bind(null, angular.element(e[f]))), e[f].addEventListener("mouseleave", u) } var r = e.isCustomEntityRoute ? "custom-entity" : "page"; i("section", t.showSection, t.hideSection); i("section-module", t.showModule, t.hideModule) } function l(n, t) { function c(t) { return function (i) { n.$apply(t.bind(null, i)) } } function y(n) { return n.pageTemplateSectionId ? a('[data-cms-page-template-section-id="' + n.pageTemplateSectionId + '"]') : n.versionModuleId ? a('[data-cms-version-module-id="' + n.versionModuleId + '"]') : w() } function p() { return f.get(t[0].contentWindow.location.href) } function a(n) { var r = t[0].contentDocument.querySelector(n), i = r.cloneNode(!0), u = i.querySelector(".cofoundry-sv__hover-module"); return i.className += " cofoundry-sv__section-loading", u && (u.className = u.className.replace("cofoundry-sv__hover-module", "")), r.parentNode.replaceChild(i, r), p().then(function (r) { var f = b(r.data), u; e.isModuleOver = !1; e.isSectionOver = !1; u = f.querySelector(n); u && (i.parentNode.replaceChild(u, i), s(u, h)); k(t, "pageContentReloaded", {}) }) } function w() { return t[0].contentWindow.location.reload(), o = u.defer(), o.promise } function b(n) { var t = document.createElement("div"); return t.innerHTML = n, t } function k(n, t, i) { var r = n[0].contentWindow; r.CMS && r.CMS.events.trigger(t, i) } var h = this, e = n.$new(), v = i("<cms-page-section><\/cms-page-section>"), l; e.siteFrameEl = t; e.refreshContent = y; l = v(e); r.find("body").eq(0).append(l); h.showSection = c(function (n) { e.isSectionOver && n == e.sectionAnchorElement || (e.isSectionOver = !0, e.sectionAnchorElement = n) }); h.hideSection = c(function () { e.isSectionOver = !1 }); h.showModule = c(function (n) { e.isModuleOver && n == e.moduleAnchorElement || (e.isModuleOver = !0, e.moduleAnchorElement = n) }); h.hideModule = c(function () { e.isModuleOver = !1 }) } return { restrict: "A", link: h }; var o }]); angular.module("cms.visualEditor").factory("visualEditor.pageModuleService", ["$http", "shared.serviceBase", "visualEditor.options", function (n, t, i) { function u(n, t) { return f(n) + "/" + t } function f(n) { return n ? o : e } var r = {}, e = t + "page-version-section-modules", o = t + "custom-entity-version-page-modules"; return r.getAllModuleTypes = function () { return n.get(t + "page-module-types/") }, r.getPageVersionModuleById = function (t, i) { return n.get(u(t, i) + "?datatype=updatecommand") }, r.getSection = function (i) { return n.get(t + "page-templates/0/sections/" + i) }, r.getModuleTypeSchema = function (i) { return n.get(t + "page-module-types/" + i) }, r.add = function (t, r) { var u = t ? "customEntity" : "page"; return r[u + "VersionId"] = i.versionId, n.post(f(t), r) }, r.update = function (t, i, r) { return n.put(u(t, i), r) }, r.remove = function (t, i) { return n.delete(u(t, i)) }, r.moveUp = function (t, i) { return n.put(u(t, i) + "/move-up") }, r.moveDown = function (t, i) { return n.put(u(t, i) + "/move-down") }, r }])