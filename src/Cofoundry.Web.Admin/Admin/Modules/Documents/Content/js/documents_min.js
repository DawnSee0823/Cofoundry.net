angular.module("cms.documents", ["ngRoute", "cms.shared"]).constant("_", window._).constant("documents.modulePath", "/admin/modules/documents/js/"); angular.module("cms.documents").config(["$routeProvider", "shared.routingUtilities", "documents.modulePath", function (n, t, i) { t.registerCrudRoutes(n, i, "Document") }]); angular.module("cms.documents").controller("AddDocumentController", ["$location", "_", "shared.focusService", "shared.stringUtilities", "shared.LoadState", "documents.documentService", function (n, t, i, r, u, f) { function s() { l(); e.save = h; e.cancel = a; e.onFileChanged = c; e.editMode = !1; e.saveLoadState = new u } function h() { e.saveLoadState.on(); f.add(e.command).progress(e.saveLoadState.setProgress).then(o).finally(e.saveLoadState.off) } function c() { var n = e.command; n.file && n.file.name && (n.title = r.capitaliseFirstLetter(r.getFileNameWithoutExtension(n.file.name)), n.fileName = r.slugify(n.title), i.focusById("title")) } function l() { e.command = {} } function a() { o() } function o() { n.path("") } var e = this; s() }]); angular.module("cms.documents").controller("DocumentDetailsController", ["$routeParams", "$q", "$location", "_", "shared.LoadState", "shared.modalDialogService", "documents.documentService", "documents.modulePath", function (n, t, i, r, u, f, e) { function a() { o.edit = v; o.save = y; o.cancel = p; o.remove = w; o.editMode = !1; o.globalLoadState = new u; o.saveLoadState = new u; o.formLoadState = new u(!0); h(o.formLoadState) } function v() { o.editMode = !0; o.mainForm.formStatus.clear() } function y() { l(o.saveLoadState); e.update(o.command).then(b.bind(null, "Changes were saved successfully", o.saveLoadState)).finally(s.bind(null, o.saveLoadState)) } function p() { o.editMode = !1; o.previewDocument = r.clone(o.document); o.command = c(o.document); o.mainForm.formStatus.clear() } function w() { function t() { return l(), e.remove(o.document.documentAssetId).then(k).catch(s) } var n = { title: "Delete Document", message: "Are you sure you want to delete this document?", okButtonTitle: "Yes, delete it", onOk: t }; f.confirm(n) } function b(n, t) { return h(t).then(o.mainForm.formStatus.success.bind(null, n)) } function h(t) { function i() { return e.getById(n.id).then(function (n) { o.document = n; o.previewDocument = n; o.command = c(n); o.editMode = !1 }) } return i().then(s.bind(null, t)) } function c(n) { return r.pick(n, "documentAssetId", "title", "fileName", "description", "tags") } function k() { i.path("") } function l(n) { o.globalLoadState.on(); n && r.isFunction(n.on) && n.on() } function s(n) { o.globalLoadState.off(); n && r.isFunction(n.off) && n.off() } var o = this; a() }]); angular.module("cms.documents").controller("DocumentListController", ["_", "shared.LoadState", "shared.SearchQuery", "shared.urlLibrary", "documents.documentService", function (n, t, i, r, u) { function s() { f.gridLoadState = new t; f.query = new i({ onChanged: h }); f.filter = f.query.getFilters(); f.toggleFilter = e; f.getDocumentUrl = r.getDocumentUrl; e(!1); o() } function e(t) { f.isFilterVisible = n.isUndefined(t) ? !f.isFilterVisible : t } function h() { e(!1); o() } function o() { return f.gridLoadState.on(), u.getAll(f.query.getParameters()).then(function (n) { f.result = n; f.gridLoadState.off() }) } var f = this; s() }]); angular.module("cms.documents").factory("documents.documentService", ["$http", "$upload", "shared.documentService", function (n, t, i) { function u(n, i, r) { var u = _.omit(i, "file"); return t.upload({ url: n, data: u, file: i.file, method: r }) } var r = _.extend({}, i); return r.add = function (n) { return u(r.getBaseRoute(), n, "POST") }, r.update = function (n) { return u(r.getIdRoute(n.documentAssetId), n, "PATCH") }, r.remove = function (t) { return n.delete(r.getIdRoute(t)) }, r }])