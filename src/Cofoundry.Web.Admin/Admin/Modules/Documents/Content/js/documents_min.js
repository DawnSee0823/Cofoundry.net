angular.module("cms.documents",["ngRoute","cms.shared"]).constant("_",window._).constant("documents.modulePath","/Admin/Modules/Documents/Js/"),angular.module("cms.documents").config(["$routeProvider","shared.routingUtilities","documents.modulePath",function(e,t,n){t.registerCrudRoutes(e,n,"Document")}]),angular.module("cms.documents").factory("documents.documentService",["$http","shared.documentService",function(t,e){var n=_.extend({},e);return n.update=function(e){return n.uploadFile(n.getIdRoute(e.documentAssetId),e,"PUT")},n.remove=function(e){return t.delete(n.getIdRoute(e))},n}]),angular.module("cms.documents").controller("AddDocumentController",["$location","_","shared.focusService","shared.stringUtilities","shared.LoadState","documents.documentService",function(e,t,n,o,a,r){var i=this;function d(){i.saveLoadState.on(),r.add(i.command).progress(i.saveLoadState.setProgress).then(s).finally(i.saveLoadState.off)}function u(){var e=i.command;e.file&&e.file.name&&(e.title=o.capitaliseFirstLetter(o.getFileNameWithoutExtension(e.file.name)),e.fileName=o.slugify(e.title),n.focusById("title"))}function c(){s()}function s(){e.path("")}i.command={},i.save=d,i.cancel=c,i.onFileChanged=u,i.editMode=!1,i.saveLoadState=new a}]),angular.module("cms.documents").controller("DocumentDetailsController",["$routeParams","$q","$location","_","shared.LoadState","shared.modalDialogService","shared.permissionValidationService","shared.urlLibrary","documents.documentService","documents.modulePath",function(t,e,n,o,a,r,i,d,u,c){var s=this;function l(){s.editMode=!0,s.mainForm.formStatus.clear()}function m(){L(s.saveLoadState),u.update(s.command).progress(s.saveLoadState.setProgress).then(function(e,t){return h(t).then(s.mainForm.formStatus.success.bind(null,e))}.bind(null,"Changes were saved successfully",s.saveLoadState)).finally(p.bind(null,s.saveLoadState))}function f(){s.editMode=!1,s.previewDocument=o.clone(s.document),s.command=v(s.document),s.previewUrl=d.getDocumentUrl(s.previewDocument),s.mainForm.formStatus.clear()}function g(){var e={title:"Delete Document",message:"Are you sure you want to delete this document?",okButtonTitle:"Yes, delete it",onOk:function(){return L(),u.remove(s.document.documentAssetId).then(S).catch(p)}};r.confirm(e)}function h(e){return u.getById(t.id).then(function(e){s.document=e,s.previewDocument=e,s.command=v(e),s.previewUrl=d.getDocumentUrl(e),s.editMode=!1}).then(p.bind(null,e))}function v(e){return o.pick(e,"documentAssetId","title","fileName","description","tags")}function S(){n.path("")}function L(e){s.globalLoadState.on(),e&&o.isFunction(e.on)&&e.on()}function p(e){s.globalLoadState.off(),e&&o.isFunction(e.off)&&e.off()}s.edit=l,s.save=m,s.cancel=f,s.remove=g,s.editMode=!1,s.globalLoadState=new a,s.saveLoadState=new a,s.formLoadState=new a(!0),s.canUpdate=i.canUpdate("COFDOC"),s.canDelete=i.canDelete("COFDOC"),h(s.formLoadState)}]),angular.module("cms.documents").controller("DocumentListController",["_","shared.LoadState","shared.SearchQuery","shared.urlLibrary","shared.permissionValidationService","documents.documentService",function(t,e,n,o,a,r){var i=this;function d(e){i.isFilterVisible=t.isUndefined(e)?!i.isFilterVisible:e}function u(){d(!1),c()}function c(){return i.gridLoadState.on(),r.getAll(i.query.getParameters()).then(function(e){i.result=e,i.gridLoadState.off()})}i.gridLoadState=new e,i.query=new n({onChanged:u}),i.filter=i.query.getFilters(),i.toggleFilter=d,i.getDocumentUrl=o.getDocumentUrl,i.canCreate=a.canCreate("COFDOC"),i.canUpdate=a.canUpdate("COFDOC"),d(!1),c()}]);